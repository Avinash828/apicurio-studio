name: Release Workflow
on:
  workflow_dispatch:
    inputs:
      release-version:
        description: 'Version being released'
        required: true
      snapshot-version:
        description: 'Next snapshot version'
        required: true
      branch:
        description: 'Branch to release from'
        required: true
        default: 'master'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js v14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Set up JDK 11
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '11'
          architecture: x64
      - name: Set up Gren
        run: npm install github-release-notes -g
      - name: Set up NPM CLI Login
        run: npm install -g npm-cli-login
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - name: Login to Quay.io Registry
        run: echo $Anuj221$ | docker login quay.io -u priyas2856 --password-stdin
      - name: Apicurio Studio Code Checkout
        run: |
          mkdir studio
          cd studio
          git init
          git config --global user.name "apicurio-ci"
          git config --global user.email "eric.wittmann+apicurio-ci@gmail.com"
          git remote add origin "https://apicurio-ci:${{ secrets.ACCESS_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
          git fetch
          git checkout ${{ github.event.inputs.branch }}
          git branch --set-upstream-to=origin/${{ github.event.inputs.branch }}
          git pull
      - name: Apicurio Website Code Checkout
        run: |
          mkdir website
          cd website
          git init
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"
          git remote add origin "https://apicurio-ci:${{ secrets.ACCESS_TOKEN }}@github.com/Apicurio/apicurio.github.io.git"
          git fetch
          git checkout master
          git branch --set-upstream-to=origin/master
          git pull
      - name: Update Release Version ${{ github.event.inputs.release-version }} in pom.xml
        run: cd studio && mvn versions:set -DnewVersion=${{ github.event.inputs.release-version}} -DgenerateBackupPoms=false -DprocessAllModules=true
      - name: Validating Apicurio Studio maven build
        run: cd studio && mvn clean install
      - name: Update Release Version ${{ github.event.inputs.release-version }} in Package.json
        run: |
          cd studio/front-end/studio
          sed -i "s/version.:.*/version\": \"${{ github.event.inputs.release-version }}\",/g" package.json
          sed -i "s/.Final//g" package.json
          rm -rf dist*
          rm -rf node_modules
      - name: Validating Apicurio Studio UI build 
        run: |
          cd studio/front-end/studio
          yarn install
          echo "**************** Validating Apicurio Studio UI build ****************"
          yarn run build
      - name: Update Release Version ${{ github.event.inputs.release-version }} in OpenShift template(s)
        run: |
          cd studio/distro/openshift
          sed -i "s/latest-release/${{ github.event.inputs.release-version }}/g" apicurio-template.yml
          sed -i "s/latest-release/${{ github.event.inputs.release-version }}/g" apicurio-standalone-template.yml    
      - name: Preparing Apicurio UI For Release
        run: |
          cd studio/front-end/studio
          rm -rf dist*
          rm -rf node_modules
          yarn install
          yarn run build-editor
      
      - name: Preparing Apicurio UI For Release
        run: |
          cd studio/front-end/studio
          rm -rf dist*
          rm -rf node_modules
          yarn install
          yarn run build-editor
      - name: avi-info
        run: |
           pwd
           ls
           cd studio/platforms/thorntail/api
           ls
      - name: Setup qemu
        uses: docker/setup-qemu-action@v1
      - name: Setup buildx
        uses: docker/setup-Buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: avinashyadavpuresoftware
          password: Avinash@8794
      - name: Building Docker Images
        run: |
          cd studio
          docker build -t="avinashyadavpuresoftware/apicurio-studio-api" -t="avinashyadavpuresoftware/apicurio-studio-api:latest-release" -t="avinashyadavpuresoftware/apicurio-studio-api:${{ github.event.inputs.release-version }}" -t="quay.io/avinash_yadav/apicurio-studio-api" -t="quay.io/avinash_yadav/apicurio-studio-api:latest-release" -t="quay.io/avinash_yadav/apicurio-studio-api:${{ github.event.inputs.release-version }}" --rm platforms/thorntail/api/
          docker build -t="avinashyadavpuresoftware/apicurio-studio-ws" -t="avinashyadavpuresoftware/apicurio-studio-ws:latest-release" -t="avinashyadavpuresoftware/apicurio-studio-ws:${{ github.event.inputs.release-version }}" -t="quay.io/avinash_yadav/apicurio-studio-ws" -t="quay.io/avinash_yadav/apicurio-studio-ws:latest-release" -t="quay.io/avinash_yadav/apicurio-studio-ws:${{ github.event.inputs.release-version }}" --rm platforms/thorntail/ws/
          docker build -t="avinashyadavpuresoftware/apicurio-studio-ui" -t="avinashyadavpuresoftware/apicurio-studio-ui:latest-release" -t="avinashyadavpuresoftware/apicurio-studio-ui:${{ github.event.inputs.release-version }}" -t="quay.io/avinash_yadav/apicurio-studio-ws" -t="quay.io/avinash_yadav/apicurio-studio-ui:latest-release" -t="quay.io/avinash_yadav/apicurio-studio-ui:${{ github.event.inputs.release-version }}" --rm platforms/thorntail/ui/
      - name: Push The Tagged Docker Images
        run: |
          cd studio
          docker push avinashyadavpuresoftware/apicurio-studio-api:latest
          docker push avinashyadavpuresoftware/apicurio-studio-ws:latest
          docker push avinashyadavpuresoftware/apicurio-studio-ui:latest
          docker push avinashyadavpuresoftware/apicurio-studio-api:latest-release
          docker push avinashyadavpuresoftware/apicurio-studio-ws:latest-release
          docker push avinashyadavpuresoftware/apicurio-studio-ui:latest-release
          docker push avinashyadavpuresoftware/apicurio-studio-api:${{ github.event.inputs.release-version }}
          docker push avinashyadavpuresoftware/apicurio-studio-ws:${{ github.event.inputs.release-version }}
          docker push avinashyadavpuresoftware/apicurio-studio-ui:${{ github.event.inputs.release-version }}
          docker push quay.io/avinash_yadav/apicurio-studio-api:latest
          docker push quay.io/avinash_yadav/apicurio-studio-ws:latest
          docker push quay.io/avinash_yadav/apicurio-studio-ui:latest
          docker push quay.io/avinash_yadav/apicurio-studio-api:latest-release
          docker push quay.io/avinash_yadav/apicurio-studio-ws:latest-release
          docker push quay.io/avinash_yadav/apicurio-studio-ui:latest-release
          docker push quay.io/avinash_yadav/apicurio-studio-api:${{ github.event.inputs.release-version }}
          docker push quay.io/avinash_yadav/apicurio-studio-ws:${{ github.event.inputs.release-version }}
          docker push quay.io/avinash_yadav/apicurio-studio-ui:${{ github.event.inputs.release-version }}
      
      - name: Updating Project Website for Release ${{ github.event.inputs.release-version }}
        run: |
          cd website
          echo "********** Downloading Latest Release JSON File **********"
          cd _data/studio
          rm latestRelease.json
          touch latestRelease.json && curl https://api.github.com/repos/apicurio/apicurio-studio/releases/latest > latestRelease.json
      - name: Commit Project Website Changes
        run: |
          cd website
          git add .
          git commit -m "Automated Update For Apicurio Studio Release Version: ${{ github.event.inputs.release-version}}"
          git push
          
  test_arm64: 
     runs-on: ubuntu-latest
     strategy:
      matrix:
        python-version: [ 3.8]
      fail-fast: false
     steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Install and Run tests
        run: |
               docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
               arm64v8/ubuntu:20.04 \
               bash -exc 'apt-get update -y && \
                 apt-get install openjdk-11-jdk -y && \
                 apt-get install maven -y && \
                 mvn clean install && \
                 pwd && \
                 ls && \
                 cd platforms/thorntail/api && \
                 ls'
      - name: Setup buildx
        uses: docker/setup-Buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: avinashyadavpuresoftware
          password: Avinash@8794
      - name: Build and Publish API
        uses: docker/build-push-action@v2
        with:
         context: ./platforms/thorntail/api
         file: ./platforms/thorntail/api/Dockerfile
         platforms: linux/arm64
         push: true
         tags: avinashyadavpuresoftware/imaggg1:latest
      - name: Build and Publish WS
        uses: docker/build-push-action@v2
        with:
         context: ./platforms/thorntail/ws
         file: ./platforms/thorntail/ws/Dockerfile
         platforms: linux/arm64
         push: true
         tags: avinashyadavpuresoftware/imaggg2:latest
      - name: Build and Publish UI
        uses: docker/build-push-action@v2
        with:
         context: ./platforms/thorntail/ui
         file: ./platforms/thorntail/ui/Dockerfile
         platforms: linux/arm64
         push: true
         tags: avinashyadavpuresoftware/imaggg3:latest
 
  test_arm64_auth: 
     runs-on: ubuntu-latest
     strategy:
      matrix:
        python-version: [ 3.8]
      fail-fast: false
     steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Setup buildx
        uses: docker/setup-Buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: avinashyadavpuresoftware
          password: Avinash@8794
      - name: Build and Publish API
        uses: docker/build-push-action@v2
        with:
         context: ./distro/quarkus/openshift/auth
         file: ./distro/quarkus/openshift/auth/Dockerfile
         platforms: linux/arm64
         push: true
         tags: avinashyadavpuresoftware/imaggg4:latest


